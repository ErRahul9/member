

services:

  membership-consumer:
    build:
      context: ..
      dockerfile: Dockerfile
    depends_on:
      - aerospike
      - recency
      - frequency-cap
      - init-kafka
    restart: on-failure:3
    environment:
      SPRING_PROFILES_ACTIVE: "docker"



  recency:
    image: steelhousedev/local-redis-cluster
    container_name: recencySettings
    environment:
      REDIS_START_PORT: 40001
    network_mode: host

  frequency-cap:
    image: steelhousedev/local-redis-cluster
    container_name: frequencyCap
    environment:
      REDIS_START_PORT: 40011
    network_mode: host

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"


  kafka:
    image: confluentinc/cp-kafka:7.3.2
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafkaConf:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafkaConf.controller=INFO,kafkaConf.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafkaConf.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zookeeper

  init-kafka:
    image: confluentinc/cp-kafka:7.3.2
    depends_on:
      - kafka
    entrypoint: [ "/bin/sh", "-c" ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:29092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic membership-updates-test --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:29092 --list
      "
  aerospike:
    image: aerospike/aerospike-server:latest
    container_name: aero-node1
    hostname: aero-node1
    ports:
      - "3000:3000"  # Service port
      - "3001:3001"  # Heartbeat port
      - "3002:3002"  # Fabric port
      - "3003:3003"  # Info port
    networks:
      aerospike-network:
        ipv4_address: 172.28.0.2
  #    volumes:
  #      - aerospike_data_node1:/opt/aero/data
  #      - .aero/aero.conf:/etc/aero/aero.conf



networks:
  aerospike-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16