---
spring:
  kafka:
    listener:
      concurrency=: 1
    consumer:
      bootstrap-servers: [ 'b-3.msk-rtb-prod-2.ifib9x.c10.kafkaConf.us-west-2.amazonaws.com:9092','b-4.msk-rtb-prod-2.ifib9x.c10.kafkaConf.us-west-2.amazonaws.com:9092','b-7.msk-rtb-prod-2.ifib9x.c10.kafkaConf.us-west-2.amazonaws.com:9092' ]
      group-id: membership-consumer-prod-oracle-west
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafkaConf.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafkaConf.common.serialization.StringDeserializer

logging:
  level:
    app: INFO

redis:
  recencyConnection: redis://core-prod-recency.pid24g.clustercfg.usw2.cache.amazonaws.com:6379
  frequencyCapConnection: redis://rtb-prod-bidder-frequency-caps-b.pid24g.clustercfg.usw2.cache.amazonaws.com:6379
  topologyRefreshHours: 1
  clientShutdownSeconds: 60
  requestTimeoutSeconds: 10

aerospike:
  hostnames: [localhost]
  port: 3000
  namespace: rtb
  set-name: household-profile
  ttl-seconds: 604800

membership:
  oracleConsumer: true
  membershipConsumer: false
  impressionConsumer: false
  recencyConsumer: false

app:
  recencySha: d0092a4b68842a839daa2cf020983b8c0872f0db
  recencyDeviceIDTTLSeconds: 2592000
  recencyExpirationWindowMilliSeconds: 2592000000
  frequencySha: 22242d94dc42e02a0fb3c21bfaa0d77f3237d869
  frequencyDeviceIDTTLSeconds: 3600000
  frequencyExpirationWindowMilliSeconds: 864000000
